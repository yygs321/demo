<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.BoardMapper">

    <resultMap id="BoardWithUserMap" type="com.example.entity.Board">
        <id property="id" column="board_id"/>
        <result property="title" column="board_title"/>
        <result property="content" column="board_content"/>
        <association property="user" javaType="com.example.entity.User">
            <id property="id" column="user_id"/>
            <result property="name" column="user_name"/>
        </association>
    </resultMap>

    <sql id="boardColumns">
        b.id AS board_id,
        b.title AS board_title,
        b.content AS board_content,
        u.id AS user_id,
        u.name AS user_name
    </sql>

    <select id="findById" parameterType="long" resultMap="BoardWithUserMap">
        SELECT <include refid="boardColumns" />
        FROM board b
        JOIN user u ON b.user_id = u.id
        WHERE b.id = #{id}
    </select>

    <select id="findAll" resultMap="BoardWithUserMap">
        SELECT <include refid="boardColumns" />
        FROM board b
        JOIN user u ON b.user_id = u.id
        ORDER BY b.id DESC
    </select>

    <select id="findByUserId" parameterType="long" resultMap="BoardWithUserMap">
        SELECT <include refid="boardColumns" />
        FROM board b
        JOIN user u ON b.user_id = u.id
        WHERE b.user_id = #{userId}
        ORDER BY b.id DESC
    </select>

    <select id="findByTitleContaining" parameterType="string" resultMap="BoardWithUserMap">
        SELECT <include refid="boardColumns" />
        FROM board b
        JOIN user u ON b.user_id = u.id
        WHERE b.title LIKE CONCAT('%', #{title}, '%')
        ORDER BY b.id DESC
    </select>

    <select id="findOwnBoard" resultMap="BoardWithUserMap">
        SELECT <include refid="boardColumns" />
        FROM board b JOIN user u ON b.user_id = u.id
        WHERE b.id = #{boardId} AND b.user_id = #{userId}
    </select>

    <insert id="save" parameterType="com.example.entity.Board" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO board (title, content, user_id)
        VALUES (#{title}, #{content}, #{user.id})
    </insert>

    <update id="update" parameterType="com.example.entity.Board">
        UPDATE board SET title = #{title}, content = #{content} WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM board WHERE id = #{id}
    </delete>

</mapper>